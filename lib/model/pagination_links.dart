//
// AUTO-GENERATED FILE, DO NOT MODIFY!
//
// @dart=2.0

// ignore_for_file: unused_element, unused_import
// ignore_for_file: always_put_required_named_parameters_first
// ignore_for_file: constant_identifier_names
// ignore_for_file: lines_longer_than_80_chars

part of openapi.api;

class PaginationLinks {
  /// Returns a new [PaginationLinks] instance.
  PaginationLinks({
    @required this.first,
    @required this.last,
    this.prev,
    this.next,
  });

  /// The first page.
  String first;

  /// The last page.
  String last;

  /// The previous page. This is specified as either `string` or `null` purely for spec testing purposes. The model which is autogenerated from this definition will be thrown out and written by-hand.
  String prev;

  /// The next page. This is specified as either `string` or `null` purely for spec testing purposes. The model which is autogenerated from this definition will be thrown out and written by-hand.
  String next;

  @override
  bool operator ==(Object other) => identical(this, other) || other is PaginationLinks &&
     other.first == first &&
     other.last == last &&
     other.prev == prev &&
     other.next == next;

  @override
  int get hashCode =>
  // ignore: unnecessary_parenthesis
    (first == null ? 0 : first.hashCode) +
    (last == null ? 0 : last.hashCode) +
    (prev == null ? 0 : prev.hashCode) +
    (next == null ? 0 : next.hashCode);

  @override
  String toString() => 'PaginationLinks[first=$first, last=$last, prev=$prev, next=$next]';

  Map<String, dynamic> toJson() {
    final json = <String, dynamic>{};
      json[r'first'] = first;
      json[r'last'] = last;
    if (prev != null) {
      json[r'prev'] = prev;
    }
    if (next != null) {
      json[r'next'] = next;
    }
    return json;
  }

  /// Returns a new [PaginationLinks] instance and imports its values from
  /// [value] if it's a [Map], null otherwise.
  // ignore: prefer_constructors_over_static_methods
  static PaginationLinks fromJson(dynamic value) {
    if (value is Map) {
      final json = value.cast<String, dynamic>();
      return PaginationLinks(
        first: mapValueOfType<String>(json, r'first'),
        last: mapValueOfType<String>(json, r'last'),
        prev: mapValueOfType<String>(json, r'prev'),
        next: mapValueOfType<String>(json, r'next'),
      );
    }
    return null;
  }

  static List<PaginationLinks> listFromJson(dynamic json, {bool emptyIsNull, bool growable,}) =>
    json is List && json.isNotEmpty
      ? json.map(PaginationLinks.fromJson).toList(growable: true == growable)
      : true == emptyIsNull ? null : <PaginationLinks>[];

  static Map<String, PaginationLinks> mapFromJson(dynamic json) {
    final map = <String, PaginationLinks>{};
    if (json is Map && json.isNotEmpty) {
      json
        .cast<String, dynamic>()
        .forEach((key, dynamic value) => map[key] = PaginationLinks.fromJson(value));
    }
    return map;
  }

  // maps a json object with a list of PaginationLinks-objects as value to a dart map
  static Map<String, List<PaginationLinks>> mapListFromJson(dynamic json, {bool emptyIsNull, bool growable,}) {
    final map = <String, List<PaginationLinks>>{};
    if (json is Map && json.isNotEmpty) {
      json
        .cast<String, dynamic>()
        .forEach((key, dynamic value) {
          map[key] = PaginationLinks.listFromJson(
            value,
            emptyIsNull: emptyIsNull,
            growable: growable,
          );
        });
    }
    return map;
  }
}

